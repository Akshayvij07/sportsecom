// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/Addwishlist/{product_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Wishlist"
                ],
                "summary": "api to add a product to wish list",
                "operationId": "AddToWishList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product_id",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully added product to wishlist",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "invalid input",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/Removewishlist/{product_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Wishlist"
                ],
                "summary": "api to remove a product from wish list",
                "operationId": "RemoveFromWishList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product_id",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully removed product item from wishlist",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "invalid input",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/SaveAddress": {
            "post": {
                "description": "Create a new user with the specified details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UsersAddress"
                ],
                "summary": "AddAdrress_for_user",
                "operationId": "Add_Adress",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddressReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/UpdateAddress": {
            "patch": {
                "description": "Update user Adresses.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UsersAddress"
                ],
                "summary": "updateAdrress_for_user",
                "operationId": "Update_Adress",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AddressReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/UpdatePassword": {
            "patch": {
                "description": "Update user Password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "EditUsers"
                ],
                "summary": "updatePassword_for_user",
                "operationId": "Update_Password",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Password"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/block": {
            "patch": {
                "description": "Admin can block a  user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin can block a user",
                "operationId": "block-user",
                "parameters": [
                    {
                        "description": "inputs",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BlockUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/category/add": {
            "post": {
                "description": "Admin can create new category from admin panel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category"
                ],
                "summary": "Create new product category",
                "operationId": "create-category",
                "parameters": [
                    {
                        "description": "New category name",
                        "name": "category_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/category/delete/{category_id}": {
            "delete": {
                "description": "Admin can delete a category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category"
                ],
                "summary": "Admin can delete a category",
                "operationId": "delete-category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category_id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/category/update/{id}": {
            "patch": {
                "description": "Admin can update category details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category"
                ],
                "summary": "Admin can update category details",
                "operationId": "update-category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the Category to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "category info",
                        "name": "category_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/coupon/AddCoupons": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Admin can add coupon",
                "tags": [
                    "Coupon"
                ],
                "summary": "api for add Coupons for ecommerce",
                "operationId": "AddCoupon",
                "parameters": [
                    {
                        "description": "Input true info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Coupon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully productItem added to cart"
                    },
                    "400": {
                        "description": "can't add the product item into cart"
                    }
                }
            }
        },
        "/admin/coupon/Delete/{CouponID}": {
            "delete": {
                "description": "Admin can delete a coupon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupon"
                ],
                "summary": "Admin can delete a coupon",
                "operationId": "delete-coupon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CouponID",
                        "name": "CouponID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/coupon/Update/{CouponID}": {
            "patch": {
                "description": "Admin can update existing coupon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupon"
                ],
                "summary": "Admin can update existing coupon",
                "operationId": "update-coupon",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CouponID",
                        "name": "CouponID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "details of coupon to be updated",
                        "name": "coupon_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Coupon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/coupon/Viewcoupon/{id}": {
            "get": {
                "description": "Admins can see Coupons with coupon_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupon"
                ],
                "summary": "Admins  can see Coupons with coupon_id",
                "operationId": "find-Coupon-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CouponID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/coupon/couponlist": {
            "get": {
                "description": "Endpoint for getting all coupons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupon"
                ],
                "summary": "for geting all order status list",
                "operationId": "List-all-coupons",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/findall": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "FindAllUsers",
                "operationId": "FindAllUsers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/finduser/{user_id}": {
            "get": {
                "description": "Admin can fetch a specific user details using user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin can fetch a specific  user details using id",
                "operationId": "find-user-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user to be fetched",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "description": "Login admin with details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "LoginAdmin",
                "operationId": "LogInAdmin",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.AdminLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/logout": {
            "post": {
                "description": "Logout as a user exit from the ecommerce site",
                "tags": [
                    "Admin"
                ],
                "summary": "AdminLogout",
                "operationId": "AdminLogout",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Failed"
                    }
                }
            }
        },
        "/admin/order/Allorders": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminOrder"
                ],
                "summary": "FindAllorders In admin side",
                "operationId": "FindAllordersInshop",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/order/Status": {
            "get": {
                "description": "Endpoint for getting all orderStatuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminOrder"
                ],
                "summary": "for geting all order status list",
                "operationId": "List-all-orderStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/order/UpdateStatus": {
            "patch": {
                "description": "update the order statuses by every orderid.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminOrder"
                ],
                "summary": "Updateorderstatus",
                "operationId": "Order_status",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Update"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/ViewAllProducts": {
            "get": {
                "description": "users can ses all available products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Admins and users can see all available products",
                "operationId": "admin-view-all-products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/ViewProduct/{id}": {
            "get": {
                "description": "Admins and users can see products with product id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Admins and users can see products with product id",
                "operationId": "find-product-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/delete/{product_id}": {
            "delete": {
                "description": "Admin can delete a product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Admin can delete a product",
                "operationId": "delete-product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product_id",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/save": {
            "post": {
                "description": "Admins can create new product listings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Admin can create new product listings",
                "operationId": "create-product",
                "parameters": [
                    {
                        "description": "new product details",
                        "name": "new_product_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/product/updateproduct/{id}": {
            "patch": {
                "description": "Admin can update Product details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Admin can update Product details",
                "operationId": "update-Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the product to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product info",
                        "name": "category_details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/signup": {
            "post": {
                "description": "Save admin with details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "SaveAdmin",
                "operationId": "SaveAdmin",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Admin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/admin/unblock/{user_id}": {
            "patch": {
                "description": "Admin can unblock a blocked user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin can unblock a blocked user",
                "operationId": "unblock-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user to be unblocked",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/cart/Addcount": {
            "put": {
                "description": "user can delete their cartitems by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UsersCart"
                ],
                "summary": "User can delete a item",
                "operationId": "Add-Qantity",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Addcount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/cart/add/item": {
            "post": {
                "description": "user can add stock of product to user cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UsersCart"
                ],
                "summary": "api for adding product to user cart",
                "parameters": [
                    {
                        "description": "Input Field info",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Cartreq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/cart/remove/item": {
            "delete": {
                "description": "user can reduce stock of product to user cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UsersCart"
                ],
                "summary": "api for removing product from user cart",
                "parameters": [
                    {
                        "description": "Input Field info",
                        "name": "inputs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Cartreq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/cart/viewcart": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "user can see all productItem that stored in cart",
                "tags": [
                    "UsersCart"
                ],
                "summary": "api for get all cart item of user",
                "operationId": "Cart",
                "responses": {
                    "200": {
                        "description": "successfully got user cart items",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "500": {
                        "description": "faild to get cart items",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/category/disply/{id}": {
            "get": {
                "description": "Users and admins can fetch details of a specific category using id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category"
                ],
                "summary": "Fetch details of a specific category using category id",
                "operationId": "find-category-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/category/showall": {
            "get": {
                "description": "Admin, users and unregistered users can see all the available categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category"
                ],
                "summary": "View all available categories",
                "operationId": "view-all-categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/coupon/apply/{code}": {
            "patch": {
                "description": "User can apply coupon to the cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UsersCart"
                ],
                "summary": "User can apply a coupon to the cart",
                "operationId": "applay-coupon-to-cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/coupon/coupons": {
            "get": {
                "description": "Endpoint for getting all coupons in user side",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "for geting all coupon list",
                "operationId": "List-all-coupons-user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/home": {
            "get": {
                "description": "landing page for users",
                "tags": [
                    "Users"
                ],
                "summary": "HomePage",
                "operationId": "Homepage",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "failed"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login as a user to access the ecommerce site",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Login",
                "operationId": "UserLogin",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Logout as a user exit from the ecommerce site",
                "tags": [
                    "Users"
                ],
                "summary": "User Login",
                "operationId": "UserLogout",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "400": {
                        "description": "Failed"
                    }
                }
            }
        },
        "/order/cancel/{orderId}": {
            "patch": {
                "description": "Endpoint for cancelling an order associated with a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserOrder"
                ],
                "summary": "Cancels a specific order for the currently logged in user",
                "operationId": "cancel-order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the order to be cancelled",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/order/listall": {
            "get": {
                "description": "Endpoint for getting all orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserOrder"
                ],
                "summary": "for geting all order list",
                "operationId": "List-all-orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/order/place_order/{payment_id}": {
            "post": {
                "description": "This endpoint allows a user to purchase all items in their cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "Buy all items from the user's cart",
                "operationId": "buyAll",
                "parameters": [
                    {
                        "type": "string",
                        "description": "payment_id",
                        "name": "payment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/order/return/{orderId}": {
            "patch": {
                "description": "Endpoint for Returning an order associated with a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserOrder"
                ],
                "summary": "Return a specific order for the currently logged in user",
                "operationId": "return-order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the order to be Returned",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/order/view/{order_id}": {
            "get": {
                "description": "retrieving the details of a specific order identified by its order ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserOrder"
                ],
                "summary": "to get order details",
                "operationId": "view-order-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched order details",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Failed to fetch order details",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/otp/send": {
            "post": {
                "description": "Send OTP to use's mobile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otp"
                ],
                "summary": "Send OTP to user's mobile",
                "operationId": "send-otp",
                "parameters": [
                    {
                        "description": "User mobile number",
                        "name": "user_mobile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.OTPreq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/otp/verify": {
            "post": {
                "description": "Validate the  OTP sent to use's mobile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Otp"
                ],
                "summary": "Validate the OTP to user's mobile",
                "operationId": "validate-otp",
                "parameters": [
                    {
                        "description": "OTP sent to user's mobile number",
                        "name": "otp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Otpverifier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/product/AllProducts": {
            "get": {
                "description": "users can ses all available products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "users can see all available products",
                "operationId": "user-view-all-products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items to retrieve per page",
                        "name": "perPage",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Create a new user with the specified details",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User Signup",
                "operationId": "UserSignup",
                "parameters": [
                    {
                        "description": "Input Field",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserSign"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/viewAddress": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "user can see their Adress",
                "tags": [
                    "UsersAddress"
                ],
                "summary": "api for get address of user",
                "operationId": "User_Address",
                "responses": {
                    "200": {
                        "description": "successfully get Address",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    },
                    "500": {
                        "description": "faild to get Address",
                        "schema": {
                            "$ref": "#/definitions/respondse.Response"
                        }
                    }
                }
            }
        },
        "/wishlist": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "tags": [
                    "Wishlist"
                ],
                "summary": "api get all wish list items of user",
                "operationId": "GetWishListI",
                "responses": {
                    "200": {
                        "description": "Wish list is empty"
                    },
                    "400": {
                        "description": "faild to get user wish list items"
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Admin": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "admin_name": {
                    "type": "string",
                    "maxLength": 12,
                    "minLength": 4
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8
                }
            }
        },
        "request.Addcount": {
            "type": "object",
            "required": [
                "product_id"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "minimum": 1
                },
                "product_id": {
                    "type": "integer"
                }
            }
        },
        "request.AddressReq": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "house_number": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                },
                "landmark": {
                    "type": "string"
                },
                "pincode": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "request.AdminLogin": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.BlockUser": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.Cartreq": {
            "type": "object",
            "properties": {
                "productId": {
                    "type": "integer"
                }
            }
        },
        "request.Category": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "request.Coupon": {
            "type": "object",
            "required": [
                "discountpercent",
                "expirationdate",
                "maximumdiscountprice",
                "minimumpurchaseamount",
                "usagelimit"
            ],
            "properties": {
                "discountpercent": {
                    "type": "number"
                },
                "expirationdate": {
                    "type": "string"
                },
                "maximumdiscountprice": {
                    "type": "number"
                },
                "minimumpurchaseamount": {
                    "type": "number"
                },
                "usagelimit": {
                    "type": "integer"
                }
            }
        },
        "request.Login": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.OTPreq": {
            "type": "object",
            "required": [
                "phoneNumber"
            ],
            "properties": {
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "request.Otpverifier": {
            "type": "object",
            "required": [
                "phoneNumber",
                "pin"
            ],
            "properties": {
                "phoneNumber": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                }
            }
        },
        "request.Password": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "request.Product": {
            "type": "object",
            "required": [
                "brand",
                "categoryid",
                "description",
                "name"
            ],
            "properties": {
                "brand": {
                    "type": "string"
                },
                "categoryid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "prize": {
                    "type": "integer"
                },
                "qty_in_stock": {
                    "type": "integer"
                }
            }
        },
        "request.Update": {
            "type": "object",
            "required": [
                "order_id",
                "status_id"
            ],
            "properties": {
                "order_id": {
                    "type": "integer"
                },
                "status_id": {
                    "type": "integer"
                }
            }
        },
        "request.UserSign": {
            "type": "object",
            "required": [
                "confirm_password",
                "email",
                "name",
                "password",
                "phone_number"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "respondse.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {},
                "message": {
                    "type": "string"
                },
                "stastuscode": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
